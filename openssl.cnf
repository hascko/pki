[ ca ]
default_ca	= CA_default

[ CA_default ]
dir		= .
certs		= $dir/ca/certs
new_certs_dir	= $dir/ca/newcerts
database	= $dir/ca/index.txt
certificate	= $dir/ca/ca.pem
serial		= $dir/ca/serial
private_key	= $dir/ca/ca.key
default_days	= 365
default_md	= sha1
preserve	= no
policy		= policy_match
crl		= $dir/ca/crl.pem

[ CA_ssl_default ]
dir 		= .
certs		= $dir/cassl/certs
new_certs_dir	= $dir/cassl/newcerts
database	= $dir/cassl/index.txt
certificate	= $dir/cassl/cassl.pem
serial		= $dir/cassl/serial
private_key	= $dir/cassl/cassl.key
default_days	= 365
default_md	= sha1
preserve	= no
policy		= policy_match

[ policy_match ]
countryName		= match
stateOrProvinceName	= match
localityName		= match
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

[ req ]
distinguished_name	= req_distinguished_name

[ req_distinguished_name ]
countryName			= Pays
countryName_default		= FR
stateOrProvinceName		= Departement
stateOrProvinceName_default	= Ile-de-France
localityName			= Ville
localityName_default		= Grigny
organizationName		= Organisation
organizationName_default	= Hassane CIE
commonName			= www.hassane.fr
commonName_max			= 64
emailAddress			= sangare@intechinfo.fr
emailAddress_max		= 40

[ CA_ROOT ]
nsComment			= "CA Racine"
subjectKeyIdentifier		= hash
authorityKeyIdentifier		= keyid,issuer:always
basicConstraints		= critical,CA:TRUE,pathlen:1
keyUsage			= keyCertSign, cRLSign

[ CA_SSL ]
nsComment			= "CA SSL"
basicConstraints		= critical,CA:TRUE,pathlen:0
subjectKeyIdentifier		= hash
authorityKeyIdentifier		= keyid,issuer:always
issuerAltName			= issuer:copy
keyUsage			= keyCertSign, cRLSign
nsCertType			= sslCA

[ SERVER_RSA_SSL ]
nsComment			= "Certificat Serveur SSL"
subjectKeyIdentifier		= hash
authorityKeyIdentifier		= keyid,issuer:always
issuerAltName			= issuer:copy
subjectAltName			= DNS:www.webserver.com, DNS:www.webserver-bis.com
basicConstraints		= critical,CA:FALSE
keyUsage			= digitalSignature, nonRepudiation, keyEncipherment
nsCertType			= server
extendedKeyUsage		= serverAuth

[ CLIENT_RSA_SSL ]
nsComment			= "Certificat Client SSL"
subjectKeyIdentifier		= hash
authorityKeyIdentifier		= keyid,issuer:always
issuerAltName			= issuer:copy
subjectAltName			= critical,email:copy,email:user-bis@domain.com,email:user-ter@domain.com
basicConstraints		= critical,CA:FALSE
keyUsage			= digitalSignature, nonRepudiation
nsCertType			= client
extendedKeyUsage		= clientAuth
 
#debut CA_sangare
[ CA_sangare ]
dir		= .
certs		= $dir/sangare/certs
new_certs_dir	= $dir/sangare/newcerts
database	= $dir/sangare/index.txt
certificate	= $dir/sangare/sangare.pem
serial		= $dir/sangare/serial
private_key	= $dir/sangare/sangare.key
default_days	= 365
default_md	= sha1
preserve	= no
policy		= policy_match
crl		= $dir/sangare/crl.pem
 
#fin CA_sangare
#debut CA_zalika
[ CA_zalika ]
dir		= .
certs		= $dir/zalika/certs
new_certs_dir	= $dir/zalika/newcerts
database	= $dir/zalika/index.txt
certificate	= $dir/zalika/zalika.pem
serial		= $dir/zalika/serial
private_key	= $dir/zalika/zalika.key
default_days	= 365
default_md	= sha1
preserve	= no
policy		= policy_match
crl		= $dir/zalika/crl.pem
 
#fin CA_zalika
#debut CA_kiala
[ CA_kiala ]
dir		= .
certs		= $dir/kiala/certs
new_certs_dir	= $dir/kiala/newcerts
database	= $dir/kiala/index.txt
certificate	= $dir/kiala/kiala.pem
serial		= $dir/kiala/serial
private_key	= $dir/kiala/kiala.key
default_days	= 365
default_md	= sha1
preserve	= no
policy		= policy_match
crl		= $dir/kiala/crl.pem
 
#fin CA_kiala
#debut CA_east
[ CA_east ]
dir		= .
certs		= $dir/east/certs
new_certs_dir	= $dir/east/newcerts
database	= $dir/east/index.txt
certificate	= $dir/east/east.pem
serial		= $dir/east/serial
private_key	= $dir/east/east.key
default_days	= 365
default_md	= sha1
preserve	= no
policy		= policy_match
crl		= $dir/east/crl.pem
 
#fin CA_east
